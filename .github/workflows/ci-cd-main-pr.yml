name: CI-CD-main-PR
on: 
  pull_request:
    branches: [ "main" ]
    
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs: 

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code  
        uses: actions/checkout@v3
      - name: Use Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18.12.1'
      - name: Install dependencies  
        run: npm install
      - name: Test app  
        run: npm run lint

  analysis_sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18.12.1'
      - name: Install dependencies  
        run: npm install
      - name: Test app  
        run: npm run test
          
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          args:
            -Dsonar.projectKey=SylvainJanet_tokipona_site
            -Dsonar.organization=sylvainjanet

  check_analysis_sonarcloud:
    needs: analysis_sonarcloud
    name: Check Quality Gate SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Make request
      id: httpRequest
      uses: fjogeleit/http-request-action@v1
      with:
        # url: 'https://sonarcloud.io/api/qualitygates/project_status?projectKey=SylvainJanet_tokipona_site&branch=dev'
        url: "${{ format('https://sonarcloud.io/api/qualitygates/project_status?projectKey=SylvainJanet_tokipona_site&branch={0}', github.head_ref) }}"
        method: 'GET'
    - name: Show Response
      run: |
        echo ${{ steps.httpRequest.outputs.response }}
        
    - name: Check
      if: ${{ fromJson(steps.httpRequest.outputs.response).projectStatus.status != 'OK' }} 
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed('Quality gate failed')
          
  analyse_QL:
    name: Analyze CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
